@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;500;700&display=swap');
*{
  padding:0;
  margin:0;
  box-sizing: border-box;
}
html{
  font-size: 10px;
  font-family: 'Noto Sans KR', sans-serif;
}
a{
  text-decoration: none;
}
/*container는 item을 감싸는 부모 요소이며 각 item을 정렬하기 위해선 container가 필수*/
.container{
  min-height: 100vh;
  width: 100%;
  display: flex;/*block 특성(수직 쌇임)의 flex container를 정의*/
  align-items: center;
  justify-content: center;
}
/*Hero Section*/
#hero{
  background-image: url(./img/main.jpg);
  background-size: cover;
  background-position: top center;
  position: relative;
  z-index: 1;
}
#hero::after{
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  background-color: black;
  opacity: .7;
  z-index: -1;
}
#hero .hero{
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 50px;
  justify-content: flex-start;
}
#hero h1{
  display: block;
  width: fit-content;
  font-size: 4rem;
  position: relative;
  color: transparent;
  animation: text_reveal .5s ease forwards;
  animation-delay: 1s;
}
#hero h1:nth-child(1){
  animation:text_reveal_name .5s ease forwards;
  animation-delay: 1s;
}
#hero h1:nth-child(2){
  animation-delay: 2s;
}
#hero h1:nth-child(3){
  animation-delay: 3s;
}
#hero h1 span{
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 0;/*animation 이후 span이 없어지도록*/
  background-color: #99ccff;
  animation: text_reveal_box 1s ease;
  animation-delay: .3s;
}
#hero h1:nth-child(1) span{
  animation-delay: .5s;
}
#hero h1:nth-child(2) span{
  animation-delay: 1.5s;
}
#hero h1:nth-child(3) span{
  animation-delay: 2.5s;
}
#hero .cta{
  display: inline-block;
  padding: 10px 30px;
  color: #99ccff;
  background-color:  transparent;
  border: 2px solid #99ccff;
  font-size: 2rem;
  text-transform: uppercase;
  letter-spacing: .1rem;
  margin-top: 30px;
  transition: .3s ease background-color;
  transition-property: background-color, color;
}
/* hover는 사용자의 커서(마우스의 포인터)가 요소에 올라가 있을 때 적용된다.
   hover를 사용할 때 중요한 것은 다른 링크 의사 클래스가 덮어 쓸 수 있다는 것이다.

:hover 의사 클래스로 정의한 클래스는 자신보다 뒤에 있으면서 같은 역할을 하는 다른 링크 의사 클래스(:link, :visites, :active) 가 덮어쓴다.

링크를 적적히 디자인 하려면 LVHA순서
:linkㅡ :visited ㅡ :hover ㅡ :active
를 따라서

:hover 규칙을 :link와 :visited뒤, :active 앞에 배치해야 한다.


 */
#hero .cta:hover{
  color:white;
  background-color: #99ccff;
}
/*End Hero Section*/

/*Services Section*/
#services{

}
#services .services{
  flex-direction: column;
  text-align: center;
  max-width: 1500px;
  margin: 0 auto;
  padding: 100px 0;
}
#services .section-title{
  font-size: 4rem;
  font-weight: 300;
  color: black;
  margin-bottom: 10px;
  text-transform: uppercase;
  letter-spacing: .2rem;
  text-align: center;
}
/* span을 통해 특정 부분만 스타일을 바꿔줄 수 있다 */
#services .section-title span{
  color: #99ccff;
  font-size: 4rem;
  font-weight: 500;
}
#services .service-top p{
  font-size: 1.4rem;
  margin-top: 5px;
  line-height: 2.5rem;
  font-weight: 300;
  letter-spacing: .05rem;
}
#services .service-bottom{
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
}
#services .service-item{
  flex-basis: 80%;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  flex-direction: column;
  padding: 30px;
  border-radius: 10px;
  background-image: url(./img/service-bg.jpg);
  background-size: cover;
  margin: 10px 5%;
  color: white;
}

/*End Services Section*/

/* Key Frame */
@keyframes text_reveal_box{
  50%{
    width: 100%;
    left: 0;
  }
  100%{
    width: 0;
    left: 100%;
  }
}
@keyframes text_reveal{
  100%{
    color: white;
  }
}
@keyframes text_reveal_name{
  100%{
    color: #99ccff;
    font-weight: 700;
  }
}
/* End Key Frame */